{"version":3,"file":"static/js/410.4dcb8237.chunk.js","mappings":"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","sources":["redux/products.selectors.js","components/Error/ErrorMassege.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContactStore = state => state.contacts;\n\nexport const selectContacts = createSelector(\n  selectContactStore,\n  contactsStore => contactsStore.contacts\n);\nexport const selectContactsIsLoading = createSelector(\n  selectContactStore,\n  contactsStore => contactsStore.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectContactStore,\n  contactsStore => contactsStore.error\n);\nexport const selectContactsFilter = createSelector(\n  selectContactStore,\n  contactsStore => contactsStore.filter\n);","import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;","// extracted by mini-css-extract-plugin\nexport default {\"filterinput\":\"Filter_filterinput__Rk5X8\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contactReducer';\nimport { selectContactsFilter } from '../../redux/products.selectors';\nimport css from \"./Filter.module.css\";\n\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  const filterChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n      <input className={css.filterinput} onChange={filterChange} value={filter} type=\"text\" name=\"filter\" placeholder=\"Пошук\" />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsflex\":\"ContactForm_contactsflex__D93ew\",\"contactinput\":\"ContactForm_contactinput__KES5x\",\"contactbutton\":\"ContactForm_contactbutton__auEqg\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactReducer';\nimport { selectContacts } from '../../redux/products.selectors';\nimport css from './ContactForm.module.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { nanoid } from 'nanoid';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const formatPhoneNumber = (value) => {\n    const phoneNumber = value.replace(/[^0-9]/g, '');\n\n    if (phoneNumber.length < 4) {\n      return phoneNumber;\n    } else if (phoneNumber.length < 7) {\n      return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3)}`;\n    } else {\n      return `${phoneNumber.slice(0, 3)}-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(formatPhoneNumber(value));\n    }\n  };\n\n  const handleContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedNumber = number ? number.replace(/[^0-9]/g, '') : '';\n\n    if (\n      contacts.some(\n        (contact) =>\n          contact.name.toLowerCase() === normalizedName ||\n          (contact.phone && contact.phone.replace(/[^0-9]/g, '') === normalizedNumber)\n      )\n    ) {\n      Notify.failure(`${name} вже є в списку контактів.`, {\n        position: 'center-bottom',\n        timeout: 3000,\n        width: '320px',\n        fontSize: '18px',\n      });\n      return;\n    }\n\n    const formattedNumber = formatPhoneNumber(normalizedNumber);\n\n    const newOneContact = {\n      id: nanoid(),\n      name,\n      phone: formattedNumber,\n    };\n\n    dispatch(addContact(newOneContact));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    handleContact(name, number);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.contactsflex} onSubmit={handleSubmit}>\n      <input\n        className={css.contactinput}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Ім'я\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n      <input\n        className={css.contactinput}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        placeholder=\"Номер телефону\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        required\n      />\n      <button className={css.contactbutton} type=\"submit\">\n        Додати контакт\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactlistform\":\"ContactsPage_contactlistform__hsscl\",\"linone\":\"ContactsPage_linone__ylNrQ\",\"liflex\":\"ContactsPage_liflex__i0Glp\",\"divflex\":\"ContactsPage_divflex__qv3sp\",\"contactlistbutton\":\"ContactsPage_contactlistbutton__5ntvW\"};","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contactReducer';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n} from '../../redux/products.selectors';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorMessage from '../../components/Error/ErrorMassege';\nimport { Filter } from '../../components/Filter/Filter';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport css from \"./ContactsPage.module.css\";\nimport { AiFillCloseSquare } from \"react-icons/ai\";\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectContactsFilter);\n  const error = useSelector(selectContactsError);\n  const isLoading = useSelector(selectContactsIsLoading);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  const contFilter = getFilteredContacts();\n  \n  return (\n  <div className={css.contactlistform}>\n    <p>Phonebook</p>\n    <ContactForm />\n\n    <p>Contacts list</p>\n    <Filter />\n    {isLoading && <Loader />}\n    {error && <ErrorMessage message={error} />}\n\n    <ul className={css.linone}>\n      {Array.isArray(contFilter) &&\n        contFilter.map((contact) => (\n          <li className={css.liflex} key={contact.id}>\n            <div className={css.divflex}>{contact.name}: {contact.phone}</div>\n            <div className={css.contactlistbutton} onClick={() => handleDelete(contact.id)}>\n              <AiFillCloseSquare className={css.iconcontacts}/>\n            </div>\n          </li>\n        ))}\n    </ul>\n  </div>\n);\n  };\n\n  // return (\n  //   <div className={css.contactlistform}>\n  //     {isLoading && <Loader />}\n  //     {error && <ErrorMessage message={error} />}\n  \n  //     <ul className={css.linone}>\n  //       {sortedContacts.map((contact) => (\n  //         <li className={css.liflex} key={contact.id}>\n  //           <div className={css.divflex}>{contact.name}: {contact.phone}</div>\n  //           <div className={css.contactlistbutton} onClick={() => handleDelete(contact.id)}><AiFillCloseSquare className={css.iconcontacts}/></div>\n  //         </li>\n  //       ))}\n  //     </ul>\n  //   </div>\n  // );\n\n\nexport default ContactList;\n"],"names":["selectContactStore","state","contacts","selectContacts","createSelector","contactsStore","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilter","filter","_ref","message","_jsx","className","children","Filter","useSelector","dispatch","useDispatch","css","onChange","e","value","target","setFilter","type","name","placeholder","ContactForm","setName","useState","number","setNumber","formatPhoneNumber","phoneNumber","replace","length","concat","slice","handleChange","_jsxs","onSubmit","event","preventDefault","handleContact","normalizedName","toLowerCase","normalizedNumber","some","contact","phone","Notify","position","timeout","width","fontSize","formattedNumber","newOneContact","id","nanoid","addContact","pattern","required","ContactList","useEffect","fetchContacts","contFilter","getFilteredContacts","normalizedFilter","includes","Loader","ErrorMessage","Array","isArray","map","onClick","handleDelete","contactId","deleteContact","AiFillCloseSquare"],"sourceRoot":""}